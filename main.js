(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this.title=e.name,this.imageLink=e.link,this._cardSelector=n,this._id=e._id,this._owner=e.owner,this._ownerId=r,this.isLiked=!1,this._handleCardClick=o,this._handleCardRemove=i,this._handleLikeClick=u,this._handleRemoveLikeClick=a,this._likes=e.likes}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return document.querySelector(this._cardSelector).content.cloneNode(!0)}},{key:"createCard",value:function(){var e=this;return this._element=this._getTemplate(),this._likeButton=this._element.querySelector(".elements__like-button"),this._likeScorer=this._element.querySelector(".elements__like-scorer"),this._imageElement=this._element.querySelector(".elements__image"),this._likes.forEach((function(t){t._id===e._ownerId?e._likeButton.classList.add("elements__like-button_active"):e._likeButton.classList.remove("elements__like-button_active")})),this._setEventListeners(),this._imageElement.src=this.imageLink,this._imageElement.alt=this.title,this._element.querySelector(".elements__title").textContent=this.title,this._likeScorer.textContent=this._likes.length,this._element}},{key:"_likeActive",value:function(){this._likeButton.classList.toggle("elements__like-button_active")}},{key:"_checkLiked",value:function(){return this._likeButton.classList.contains("elements__like-button_active")}},{key:"showLikesScore",value:function(e){this._likeScorer.textContent=e.length,this._likeActive()}},{key:"removeCard",value:function(e){e.target.closest(".elements__element").remove()}},{key:"disableRemoveButton",value:function(){this._element.querySelector(".elements__reset-button").remove()}},{key:"_setEventListeners",value:function(){var e=this;this._elementsCard=this._element.querySelector(".elements__element"),this._likeButton.addEventListener("click",(function(){e._checkLiked()?e._handleRemoveLikeClick(e._id):e._handleLikeClick(e._id)})),this._removeButtonIcon=this._element.querySelector(".elements__reset-button"),this._owner._id===this._ownerId?this._removeButtonIcon.addEventListener("click",(function(){e._handleCardRemove(e._elementsCard,e._id)})):this._removeButtonIcon.remove(),this._imageElement.addEventListener("click",(function(t){e._handleCardClick(e._data)}))}}])&&e(n.prototype,r),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var r=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._validatedForm=n,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._buttonElement=this._validatedForm.querySelector(this._submitButtonSelector),this._inputList=Array.from(this._validatedForm.querySelectorAll(this._inputSelector))}var t,r;return t=e,(r=[{key:"_formValidation",value:function(){return this._validatedForm}},{key:"_activeSubmitButton",value:function(){this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.removeAttribute("disabled")}},{key:"_disabledSubmitButton",value:function(){this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.setAttribute("disabled","true")}},{key:"_showInputError",value:function(e){var t=this._element.querySelector("#".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){var t=this._element.querySelector("#".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this._disabledSubmitButton():this._activeSubmitButton()}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){var e=this;this._element=this._formValidation(),this._setEventListeners(),this._element.addEventListener("submit",(function(t){t.preventDefault(),e._disabledSubmitButton()}))}},{key:"removeErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._hideInputError(t)}))}}])&&n(t.prototype,r),e}(),o=document.querySelector(".profile"),i=o.querySelector(".profile__edit-button"),u=o.querySelector(".profile__add-button"),a=document.querySelector(".popup").querySelector(".popup__form"),c=a.querySelector(".popup__text-name"),s=a.querySelector(".popup__text-about"),l=document.querySelector(".popup__newcard-form"),f=document.querySelector(".popup__form-profile"),p=document.querySelector(".popup__image"),h=document.querySelector(".popup__image-title"),_=document.querySelector(".profile__edit-icon"),d=document.querySelector(".popup__avatar-form"),v=document.querySelector(".popup__text-name_card"),y=document.querySelector(".popup__link"),m=document.querySelector(".popup__avatar-link"),b=document.querySelector(".popup__save-button"),k=document.querySelector(".popup__save-button_card"),g=document.querySelector(".popup__save-button_avatar"),S=document.querySelector(".popup__save-button_delete-accept"),E=document.querySelector(".elements"),w={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function C(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var L=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClose",value:function(e){e.target.classList.contains("popup")&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.querySelector(".popup__close-button").addEventListener("click",(function(){e.close()})),this._popup.addEventListener("click",(function(t){return e._handleOverlayClose(t)}))}}])&&C(t.prototype,n),e}();function O(e){return(O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function j(e,t,n){return(j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function R(e,t){return(R=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function I(e,t){return!t||"object"!==O(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var A=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&R(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._submitForm=e,n._popupForm=n._popup.querySelector(".popup__form"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputSelector=this._popupForm.querySelectorAll(".popup__input"),this._formValues={},this._inputSelector.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){j(P(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",this._submitForm)}},{key:"close",value:function(){j(P(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&q(t.prototype,n),u}(L);function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function U(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t,n){return(x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=V(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function T(e,t){return(T=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function D(e,t){return!t||"object"!==B(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function V(e){return(V=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var F=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&T(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=V(r);if(o){var n=V(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return D(this,e)});function u(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),i.call(this,e)}return t=u,(n=[{key:"open",value:function(e){x(V(u.prototype),"open",this).call(this),p.src=e.link,h.textContent=e.name,p.alt=e.name}}])&&U(t.prototype,n),u}(L);function N(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var J=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"render",value:function(e){var t=this;e.reverse(),e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&N(t.prototype,n),e}();function H(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=function(){function e(t){var n=t.userName,r=t.userAbout,o=t.userAvatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=document.querySelector(n),this._about=document.querySelector(r),this._avatar=document.querySelector(o)}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.userId;this._name.textContent=t,this._about.textContent=n,this._id=r}},{key:"setUserAvatar",value:function(e){var t=e.avatar;this._avatar.src=t}},{key:"getUserId",value:function(){return this._id}}])&&H(t.prototype,n),e}();function z(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var $=function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=n,this.headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getUserAttribute",value:function(){var e=this;return fetch(this.baseUrl+"/users/me",{headers:this.headers}).then((function(t){return e._checkResponse(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch(this.baseUrl+"/cards",{headers:this.headers}).then((function(t){return e._checkResponse(t)}))}},{key:"promiseAll",value:function(){return Promise.all([this.getUserAttribute(),this.getInitialCards()])}},{key:"renderLoading",value:function(e,t,n){t?(this._buttonText=e.textContent,e.textContent=n):e.textContent=this._buttonText}},{key:"setUserAttribute",value:function(e,t){var n=this;return fetch(this.baseUrl+"/users/me",{method:"PATCH",headers:this.headers,body:JSON.stringify({name:e,about:t})}).then((function(e){return n._checkResponse(e)}))}},{key:"addCard",value:function(e,t){var n=this;return fetch(this.baseUrl+"/cards",{method:"POST",headers:this.headers,body:JSON.stringify({name:e,link:t})}).then((function(e){return n._checkResponse(e)}))}},{key:"removeCard",value:function(e){return fetch(this.baseUrl+"/cards/"+e,{method:"DELETE",headers:this.headers})}},{key:"likeCard",value:function(e){var t=this;return fetch(this.baseUrl+"/cards/likes/"+e,{method:"PUT",headers:this.headers}).then((function(e){return t._checkResponse(e)}))}},{key:"dislikeCard",value:function(e){var t=this;return fetch(this.baseUrl+"/cards/likes/"+e,{method:"DELETE",headers:this.headers}).then((function(e){return t._checkResponse(e)}))}},{key:"changeAvatar",value:function(e){var t=this;return fetch(this.baseUrl+"/users/me/avatar",{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:e})}).then((function(e){return t._checkResponse(e)}))}}])&&z(t.prototype,n),e}();function G(e){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function K(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function Q(e,t,n){return(Q="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=Y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function W(e,t){return(W=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function X(e,t){return!t||"object"!==G(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function Y(e){return(Y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var Z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&W(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=Y(r);if(o){var n=Y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return X(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,t))._acceptButton=n._popup.querySelector(".popup__save-button_delete-accept"),n._submit=e,n}return t=u,(n=[{key:"open",value:function(e,t){Q(Y(u.prototype),"open",this).call(this),this._card=e,this._id=t}},{key:"setEventListeners",value:function(){var e=this;Q(Y(u.prototype),"setEventListeners",this).call(this),this._acceptButton.addEventListener("click",(function(){e._submit(e._id,e._card,e)}))}}])&&K(t.prototype,n),u}(L);function ee(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var te=new r(w,f),ne=new r(w,l),re=new r(w,d),oe=new F(".popup__fullscreen"),ie=new M({userName:".profile__name",userAbout:".profile__about",userAvatar:".profile__avatar"}),ue=new $({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-17",headers:{authorization:"95ba4cb9-0c59-47de-9637-4b548933da0f","Content-Type":"application/json"}}),ae=function(e){var n=new t(e,"#card-template",ie.getUserId(),(function(){oe.open(e)}),(function(e,t){fe.open(e,t)}),(function(e){return ue.likeCard(e).then((function(e){n.showLikesScore(e.likes)})).catch((function(e){console.log(e)}))}),(function(e){return ue.dislikeCard(e).then((function(e){n.showLikesScore(e.likes)})).catch((function(e){console.log(e)}))}));return n.createCard()};ue.promiseAll().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var u,a=e[Symbol.iterator]();!(r=(u=a.next()).done)&&(n.push(u.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==a.return||a.return()}finally{if(o)throw i}}return n}}(t,n)||function(e,t){if(e){if("string"==typeof e)return ee(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ee(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];ie.setUserInfo({name:o.name,about:o.about,userId:o._id}),ie.setUserAvatar({avatar:o.avatar});var u=new J({renderer:function(e){u.addItem(ae(e))}},".elements");u.render(i)})).catch((function(e){console.log(e)}));var ce=new A((function(e){e.preventDefault(),ue.renderLoading(b,!0,"Загрузка..."),ue.setUserAttribute(c.value,s.value).then((function(e){ie.setUserInfo({name:e.name,about:e.about,userId:e._id}),ce.close()})).catch((function(e){console.log(e)})).finally((function(){ue.renderLoading(b)}))}),".popup__profile-edit"),se=new A((function(e){e.preventDefault(),ue.renderLoading(k,!0,"Загрузка..."),ue.addCard(v.value,y.value).then((function(e){E.prepend(ae(e)),se.close()})).catch((function(e){console.log(e)})).finally((function(){ue.renderLoading(k,!1)}))}),".popup__card-form"),le=new A((function(e){e.preventDefault(),ue.renderLoading(g,!0,"Сохранение..."),ue.changeAvatar(m.value).then((function(e){ie.setUserAvatar({avatar:e.avatar}),le.close()})).catch((function(e){console.log(e)})).finally((function(){ue.renderLoading(g,!1)}))}),".popup__edit-avatar"),fe=new Z((function(e,t,n){ue.renderLoading(S,!0,"Удаление..."),ue.removeCard(e).then((function(){t.remove(),ue.renderLoading(S,!1),n.close()})).catch((function(e){console.log(e)}))}),".popup__delete-card");te.enableValidation(),ne.enableValidation(),re.enableValidation(),oe.setEventListeners(),ce.setEventListeners(),se.setEventListeners(),le.setEventListeners(),fe.setEventListeners(),i.addEventListener("click",(function(){ce.open(),te.removeErrors(),c.value=ie.getUserInfo().name,s.value=ie.getUserInfo().about})),u.addEventListener("click",(function(){ne.removeErrors(),se.open()})),_.addEventListener("click",(function(){le.open(),re.removeErrors()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vbWVzdG8vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3V0aWxzL2NvbnN0YW50cy5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvU2VjdGlvbi5qcyIsIndlYnBhY2s6Ly9tZXN0by8uL3NyYy9jb21wb25lbnRzL1VzZXJJbmZvLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvQXBpLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoUmVtb3ZlLmpzIiwid2VicGFjazovL21lc3RvLy4vc3JjL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbIkNhcmQiLCJkYXRhIiwiY2FyZFNlbGVjdG9yIiwib3duZXJJZCIsImhhbmRsZUNhcmRDbGljayIsImhhbmRsZUNhcmRSZW1vdmUiLCJoYW5kbGVMaWtlQ2xpY2siLCJoYW5kbGVSZW1vdmVMaWtlQ2xpY2siLCJ0aGlzIiwidGl0bGUiLCJuYW1lIiwiaW1hZ2VMaW5rIiwibGluayIsIl9jYXJkU2VsZWN0b3IiLCJfaWQiLCJfb3duZXIiLCJvd25lciIsIl9vd25lcklkIiwiaXNMaWtlZCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlQ2FyZFJlbW92ZSIsIl9oYW5kbGVMaWtlQ2xpY2siLCJfaGFuZGxlUmVtb3ZlTGlrZUNsaWNrIiwiX2xpa2VzIiwibGlrZXMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2VsZW1lbnQiLCJfZ2V0VGVtcGxhdGUiLCJfbGlrZUJ1dHRvbiIsIl9saWtlU2NvcmVyIiwiX2ltYWdlRWxlbWVudCIsImZvckVhY2giLCJpdGVtIiwiY2xhc3NMaXN0IiwiYWRkIiwicmVtb3ZlIiwiX3NldEV2ZW50TGlzdGVuZXJzIiwic3JjIiwiYWx0IiwidGV4dENvbnRlbnQiLCJsZW5ndGgiLCJ0b2dnbGUiLCJjb250YWlucyIsIl9saWtlQWN0aXZlIiwiZXZ0IiwidGFyZ2V0IiwiY2xvc2VzdCIsIl9lbGVtZW50c0NhcmQiLCJhZGRFdmVudExpc3RlbmVyIiwiX2NoZWNrTGlrZWQiLCJfcmVtb3ZlQnV0dG9uSWNvbiIsIl9kYXRhIiwiRm9ybVZhbGlkYXRvciIsImFsbENsYXNzZXMiLCJ2YWxpZGF0ZWRGb3JtIiwiX3ZhbGlkYXRlZEZvcm0iLCJfaW5wdXRTZWxlY3RvciIsImlucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uU2VsZWN0b3IiLCJzdWJtaXRCdXR0b25TZWxlY3RvciIsIl9pbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5hY3RpdmVCdXR0b25DbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dEVycm9yQ2xhc3MiLCJfZXJyb3JDbGFzcyIsImVycm9yQ2xhc3MiLCJfYnV0dG9uRWxlbWVudCIsIl9pbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwicmVtb3ZlQXR0cmlidXRlIiwic2V0QXR0cmlidXRlIiwiaW5wdXRFbGVtZW50IiwiZXJyb3JFbGVtZW50IiwiaWQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUlucHV0RXJyb3IiLCJfc2hvd0lucHV0RXJyb3IiLCJzb21lIiwiX2hhc0ludmFsaWRJbnB1dCIsIl9kaXNhYmxlZFN1Ym1pdEJ1dHRvbiIsIl9hY3RpdmVTdWJtaXRCdXR0b24iLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJfY2hlY2tJbnB1dFZhbGlkaXR5IiwiX2Zvcm1WYWxpZGF0aW9uIiwicHJldmVudERlZmF1bHQiLCJwcm9maWxlIiwiZWRpdFByb2ZpbGVCdXR0b24iLCJhZGRDYXJkQnV0dG9uIiwicG9wdXBGb3JtIiwicG9wdXBUZXh0TmFtZSIsInBvcHVwVGV4dEFib3V0IiwibmV3Q2FyZEZvcm0iLCJwb3B1cEZvcm1Qcm9maWxlIiwiZnVsbHNjcmVlbkltYWdlIiwiZnVsbHNjcmVlblRpdGxlIiwiYXZhdGFyRWRpdEJ1dHRvbiIsInBvcHVwQXZhdGFyRm9ybSIsInBvcHVwVGV4dENhcmQiLCJwb3B1cExpbmtDYXJkIiwicG9wdXBBdmF0YXJMaW5rIiwicG9wdXBFZGl0U2F2ZUJ1dHRvbiIsInBvcHVwQ2FyZFNhdmVCdXR0b24iLCJwb3B1cEF2YXRhclNhdmVCdXR0b24iLCJwb3B1cFJlbW92ZVNhdmVCdXR0b24iLCJlbGVtZW50cyIsImFsbEZvcm1zQ2xhc3NlcyIsImZvcm1TZWxlY3RvciIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwia2V5IiwiY2xvc2UiLCJfaGFuZGxlT3ZlcmxheUNsb3NlIiwiUG9wdXBXaXRoRm9ybSIsInN1Ym1pdEZvcm0iLCJfc3VibWl0Rm9ybSIsIl9wb3B1cEZvcm0iLCJfZm9ybVZhbHVlcyIsImlucHV0IiwidmFsdWUiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwicmV2ZXJzZSIsInByZXBlbmQiLCJVc2VySW5mbyIsInVzZXJOYW1lIiwidXNlckFib3V0IiwidXNlckF2YXRhciIsIl9uYW1lIiwiX2Fib3V0IiwiX2F2YXRhciIsImFib3V0IiwidXNlcklkIiwiYXZhdGFyIiwiQXBpIiwiYmFzZVVybCIsImhlYWRlcnMiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiZmV0Y2giLCJ0aGVuIiwiX2NoZWNrUmVzcG9uc2UiLCJhbGwiLCJnZXRVc2VyQXR0cmlidXRlIiwiZ2V0SW5pdGlhbENhcmRzIiwiYnV0dG9uIiwiaXNMb2FkaW5nIiwidGV4dCIsIl9idXR0b25UZXh0IiwiaW5wdXROYW1lIiwiaW5wdXRBYm91dCIsIm1ldGhvZCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwiaW5wdXRMaW5rIiwiY2FyZElkIiwiUG9wdXBXaXRoUmVtb3ZlIiwiX2FjY2VwdEJ1dHRvbiIsIl9zdWJtaXQiLCJjYXJkIiwiX2NhcmQiLCJwcm9maWxlVmFsaWRhdGVkIiwiY2FyZFZhbGlkYXRlZCIsImF2YXRhclZhbGlkYXRlZCIsIm9wZW5GdWxsSW1hZ2UiLCJ1c2VySW5mbyIsImFwaSIsImF1dGhvcml6YXRpb24iLCJhZGROZXdDYXJkIiwibmV3Q2FyZCIsImdldFVzZXJJZCIsIm9wZW4iLCJwb3B1cFJlbW92ZUNhcmQiLCJsaWtlQ2FyZCIsInNob3dMaWtlc1Njb3JlIiwiZXJyIiwiY29uc29sZSIsImxvZyIsImRpc2xpa2VDYXJkIiwiY3JlYXRlQ2FyZCIsInByb21pc2VBbGwiLCJ1c2VyIiwiaW5pdGlhbENhcmRzIiwic2V0VXNlckluZm8iLCJzZXRVc2VyQXZhdGFyIiwiaW5pdENhcmRFbGVtZW50cyIsImFkZEl0ZW0iLCJyZW5kZXIiLCJwcm9maWxlRWRpdCIsInJlbmRlckxvYWRpbmciLCJzZXRVc2VyQXR0cmlidXRlIiwiY2FyZEVkaXQiLCJhZGRDYXJkIiwicG9wdXBBdmF0YXIiLCJjaGFuZ2VBdmF0YXIiLCJwb3B1cCIsInJlbW92ZUNhcmQiLCJlbmFibGVWYWxpZGF0aW9uIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJyZW1vdmVFcnJvcnMiLCJnZXRVc2VySW5mbyJdLCJtYXBwaW5ncyI6IjZMQUFxQkEsRSxXQUNqQixXQUFZQyxFQUFNQyxFQUFjQyxFQUFTQyxFQUFpQkMsRUFBa0JDLEVBQWlCQyxJLDRGQUF1QixTQUNoSEMsS0FBS0MsTUFBUVIsRUFBS1MsS0FDbEJG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QnlGLEdBQVNtQyxjQUFjbE4sS0FDN0N1RixRQUF1QndGLEdBQVNtQyxjQUFjMUUsU0FHbERwRCxFQUFjM0MsaUJBQWlCLFNBQVMsV0FDcENtSSxHQUFjcUMsZUFDZFIsR0FBU3BCLFVBR2J6RixFQUFpQm5ELGlCQUFpQixTQUFTLFdBQ3ZDa0ssR0FBWXRCLE9BQ1pSLEdBQWdCb0MsbUIiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIENhcmQge1xuICAgIGNvbnN0cnVjdG9yKGRhdGEsIGNhcmRTZWxlY3Rvciwgb3duZXJJZCwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVDYXJkUmVtb3ZlLCBoYW5kbGVMaWtlQ2xpY2ssIGhhbmRsZVJlbW92ZUxpa2VDbGljaykge1xuICAgICAgICB0aGlzLnRpdGxlID0gZGF0YS5uYW1lO1xuICAgICAgICB0aGlzLmltYWdlTGluayA9IGRhdGEubGluaztcbiAgICAgICAgdGhpcy5fY2FyZFNlbGVjdG9yID0gY2FyZFNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9pZCA9IGRhdGEuX2lkXG4gICAgICAgIHRoaXMuX293bmVyID0gZGF0YS5vd25lcjtcbiAgICAgICAgdGhpcy5fb3duZXJJZCA9IG93bmVySWQ7XG4gICAgICAgIHRoaXMuaXNMaWtlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gICAgICAgIHRoaXMuX2hhbmRsZUNhcmRSZW1vdmUgPSBoYW5kbGVDYXJkUmVtb3ZlO1xuICAgICAgICB0aGlzLl9oYW5kbGVMaWtlQ2xpY2sgPSBoYW5kbGVMaWtlQ2xpY2s7XG4gICAgICAgIHRoaXMuX2hhbmRsZVJlbW92ZUxpa2VDbGljayA9IGhhbmRsZVJlbW92ZUxpa2VDbGljaztcbiAgICAgICAgdGhpcy5fbGlrZXMgPSBkYXRhLmxpa2VzO1xuICAgIH1cblxuICAgIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NhcmRTZWxlY3RvcilcbiAgICAgICAgLmNvbnRlbnRcbiAgICAgICAgLmNsb25lTm9kZSh0cnVlKTtcbiAgICAgICAgcmV0dXJuIGNhcmRFbGVtZW50O1xuICAgIH1cblxuICAgIGNyZWF0ZUNhcmQoKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgICAgICB0aGlzLl9saWtlQnV0dG9uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2xpa2UtYnV0dG9uJyk7XG4gICAgICAgIHRoaXMuX2xpa2VTY29yZXIgPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50c19fbGlrZS1zY29yZXInKTtcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50ID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX2ltYWdlJyk7XG4gICAgICAgIHRoaXMuX2xpa2VzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgIGlmIChpdGVtLl9pZCA9PT0gdGhpcy5fb3duZXJJZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LmFkZCgnZWxlbWVudHNfX2xpa2UtYnV0dG9uX2FjdGl2ZScpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUoJ2VsZW1lbnRzX19saWtlLWJ1dHRvbl9hY3RpdmUnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5faW1hZ2VFbGVtZW50LnNyYyA9IHRoaXMuaW1hZ2VMaW5rO1xuICAgICAgICB0aGlzLl9pbWFnZUVsZW1lbnQuYWx0ID0gdGhpcy50aXRsZTtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX3RpdGxlJykudGV4dENvbnRlbnQgPSB0aGlzLnRpdGxlO1xuICAgICAgICB0aGlzLl9saWtlU2NvcmVyLnRleHRDb250ZW50ID0gdGhpcy5fbGlrZXMubGVuZ3RoO1xuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcbiAgICB9XG5cbiAgICBfbGlrZUFjdGl2ZSgpIHtcbiAgICAgICAgdGhpcy5fbGlrZUJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKCdlbGVtZW50c19fbGlrZS1idXR0b25fYWN0aXZlJyk7XG4gICAgfVxuXG4gICAgX2NoZWNrTGlrZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9saWtlQnV0dG9uLmNsYXNzTGlzdC5jb250YWlucygnZWxlbWVudHNfX2xpa2UtYnV0dG9uX2FjdGl2ZScpOyBcbiAgICB9XG5cbiAgICBzaG93TGlrZXNTY29yZShsaWtlcykge1xuICAgICAgICB0aGlzLl9saWtlU2NvcmVyLnRleHRDb250ZW50ID0gbGlrZXMubGVuZ3RoO1xuICAgICAgICB0aGlzLl9saWtlQWN0aXZlKCk7XG4gICAgfVxuXG4gICAgcmVtb3ZlQ2FyZChldnQpIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGV2dC50YXJnZXQuY2xvc2VzdCgnLmVsZW1lbnRzX19lbGVtZW50Jyk7XG4gICAgICAgIGVsZW1lbnQucmVtb3ZlKCk7XG4gICAgfVxuXG4gICAgZGlzYWJsZVJlbW92ZUJ1dHRvbigpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX3Jlc2V0LWJ1dHRvbicpLnJlbW92ZSgpO1xuICAgIH1cbiAgICBcbiAgICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMuX2VsZW1lbnRzQ2FyZCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzX19lbGVtZW50Jyk7XG4gICAgICAgIHRoaXMuX2xpa2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuX2NoZWNrTGlrZWQoKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZUxpa2VDbGljayh0aGlzLl9pZCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuX2hhbmRsZVJlbW92ZUxpa2VDbGljayh0aGlzLl9pZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLl9yZW1vdmVCdXR0b25JY29uID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudHNfX3Jlc2V0LWJ1dHRvbicpO1xuICAgICAgICBpZih0aGlzLl9vd25lci5faWQgPT09IHRoaXMuX293bmVySWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZUJ1dHRvbkljb24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7IFxuICAgICAgICAgICAgdGhpcy5faGFuZGxlQ2FyZFJlbW92ZSh0aGlzLl9lbGVtZW50c0NhcmQsIHRoaXMuX2lkKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlQnV0dG9uSWNvbi5yZW1vdmUoKTtcbiAgICB9XG4gICAgICAgIHRoaXMuX2ltYWdlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChldnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZUNhcmRDbGljayh0aGlzLl9kYXRhKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgICAgICBcbn0iLCIgICAgZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gICAgY29uc3RydWN0b3IoYWxsQ2xhc3NlcywgdmFsaWRhdGVkRm9ybSkge1xuICAgICAgICB0aGlzLl92YWxpZGF0ZWRGb3JtID0gdmFsaWRhdGVkRm9ybTtcbiAgICAgICAgdGhpcy5faW5wdXRTZWxlY3RvciA9IGFsbENsYXNzZXMuaW5wdXRTZWxlY3RvcjtcbiAgICAgICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSBhbGxDbGFzc2VzLnN1Ym1pdEJ1dHRvblNlbGVjdG9yO1xuICAgICAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gYWxsQ2xhc3Nlcy5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xuICAgICAgICB0aGlzLl9pbnB1dEVycm9yQ2xhc3MgPSBhbGxDbGFzc2VzLmlucHV0RXJyb3JDbGFzcztcbiAgICAgICAgdGhpcy5fZXJyb3JDbGFzcyA9IGFsbENsYXNzZXMuZXJyb3JDbGFzcztcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX3ZhbGlkYXRlZEZvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XG4gICAgICAgIHRoaXMuX2lucHV0TGlzdCA9IEFycmF5LmZyb20odGhpcy5fdmFsaWRhdGVkRm9ybS5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpKTtcbiAgICB9O1xuXG4gICAgX2Zvcm1WYWxpZGF0aW9uKCkge1xuICAgICAgICBjb25zdCBmb3JtID0gdGhpcy5fdmFsaWRhdGVkRm9ybTtcbiAgICAgICAgcmV0dXJuIGZvcm07XG4gICAgfTtcblxuICAgIF9hY3RpdmVTdWJtaXRCdXR0b24oKSB7XG4gICAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2Rpc2FibGVkJyk7XG4gICAgfTtcblxuICAgIF9kaXNhYmxlZFN1Ym1pdEJ1dHRvbigpIHtcbiAgICAgICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgICAgICB0aGlzLl9idXR0b25FbGVtZW50LnNldEF0dHJpYnV0ZSgnZGlzYWJsZWQnLCAndHJ1ZScpO1xuICAgIH07XG5cbiAgICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBpbnB1dEVsZW1lbnQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gICAgICAgIGVycm9yRWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xuICAgIH07XG5cbiAgICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XG4gICAgICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApO1xuICAgICAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9lcnJvckNsYXNzKTtcbiAgICAgICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7XG4gICAgfTtcblxuICAgIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XG4gICAgICAgIGlmICghaW5wdXRFbGVtZW50LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICAgICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBfaGFzSW52YWxpZElucHV0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5wdXRMaXN0LnNvbWUoKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgICAgIH0pO1xuICAgIH07XG5cbiAgICBfdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQoKSkge1xuICAgICAgICB0aGlzLl9kaXNhYmxlZFN1Ym1pdEJ1dHRvbigpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLl9hY3RpdmVTdWJtaXRCdXR0b24oKTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2NoZWNrSW5wdXRWYWxpZGl0eShpbnB1dEVsZW1lbnQpO1xuICAgICAgICAgICAgdGhpcy5fdG9nZ2xlQnV0dG9uU3RhdGUoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZW5hYmxlVmFsaWRhdGlvbigpIHtcbiAgICAgICAgdGhpcy5fZWxlbWVudCA9IHRoaXMuX2Zvcm1WYWxpZGF0aW9uKCk7XG4gICAgICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgICAgIHRoaXMuX2VsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xuICAgICAgICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLl9kaXNhYmxlZFN1Ym1pdEJ1dHRvbigpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBcbiAgICB9O1xuICAgIFxuICAgIHJlbW92ZUVycm9ycygpIHtcbiAgICAgICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn07XG5cblxuXG4iLCJleHBvcnQge2VkaXRQcm9maWxlQnV0dG9uLCBhZGRDYXJkQnV0dG9uLHBvcHVwVGV4dE5hbWUsIHBvcHVwVGV4dEFib3V0LFxuICAgIG5ld0NhcmRGb3JtLCBwb3B1cEZvcm1Qcm9maWxlLCBhbGxGb3Jtc0NsYXNzZXMsIGF2YXRhckVkaXRCdXR0b24sXG4gICAgcG9wdXBUZXh0Q2FyZCwgcG9wdXBMaW5rQ2FyZCwgcG9wdXBBdmF0YXJGb3JtLCBwb3B1cEF2YXRhckxpbmssIFxuICAgIGZ1bGxzY3JlZW5JbWFnZSwgZnVsbHNjcmVlblRpdGxlLCBlc2NCdXR0b24sIGluaXRpYWxDYXJkcyxcbiAgICBwb3B1cEVkaXRTYXZlQnV0dG9uLCBwb3B1cENhcmRTYXZlQnV0dG9uLCBwb3B1cEF2YXRhclNhdmVCdXR0b24sIHBvcHVwUmVtb3ZlU2F2ZUJ1dHRvbixcbiAgICBlbGVtZW50c307XG5cbmNvbnN0IHByb2ZpbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZScpO1xuY29uc3QgZWRpdFByb2ZpbGVCdXR0b24gPSBwcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19lZGl0LWJ1dHRvbicpO1xuY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IHByb2ZpbGUucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2FkZC1idXR0b24nKTtcbmNvbnN0IHBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwJyk7XG5jb25zdCBwb3B1cEZvcm0gPSBwb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbmNvbnN0IHBvcHVwVGV4dE5hbWUgPSBwb3B1cEZvcm0ucXVlcnlTZWxlY3RvcignLnBvcHVwX190ZXh0LW5hbWUnKTtcbmNvbnN0IHBvcHVwVGV4dEFib3V0ID0gcG9wdXBGb3JtLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dC1hYm91dCcpO1xuY29uc3QgbmV3Q2FyZEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX25ld2NhcmQtZm9ybScpO1xuY29uc3QgcG9wdXBGb3JtUHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybS1wcm9maWxlJyk7XG5jb25zdCBmdWxsc2NyZWVuSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlJyk7XG5jb25zdCBmdWxsc2NyZWVuVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2ltYWdlLXRpdGxlJyk7XG5jb25zdCBhdmF0YXJFZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtaWNvbicpO1xuY29uc3QgcG9wdXBBdmF0YXJGb3JtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19hdmF0YXItZm9ybScpO1xuY29uc3QgcG9wdXBUZXh0Q2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fdGV4dC1uYW1lX2NhcmQnKTtcbmNvbnN0IHBvcHVwTGlua0NhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2xpbmsnKTtcbmNvbnN0IHBvcHVwQXZhdGFyTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fYXZhdGFyLWxpbmsnKTtcbmNvbnN0IHBvcHVwRWRpdFNhdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uJyk7XG5jb25zdCBwb3B1cENhcmRTYXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbl9jYXJkJyk7XG5jb25zdCBwb3B1cEF2YXRhclNhdmVCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3NhdmUtYnV0dG9uX2F2YXRhcicpO1xuY29uc3QgcG9wdXBSZW1vdmVTYXZlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbl9kZWxldGUtYWNjZXB0Jyk7XG5jb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50cycpO1xuY29uc3QgZXNjQnV0dG9uID0gJ0VzY2FwZSc7XG5jb25zdCBpbml0aWFsQ2FyZHMgPSBbXTtcblxuY29uc3QgYWxsRm9ybXNDbGFzc2VzID0ge1xuICAgIGZvcm1TZWxlY3RvcjogJy5wb3B1cF9fZm9ybScsXG4gICAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxuICAgIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiAnLnBvcHVwX19zYXZlLWJ1dHRvbicsXG4gICAgaW5hY3RpdmVCdXR0b25DbGFzczogJ3BvcHVwX19zYXZlLWJ1dHRvbl9kaXNhYmxlZCcsXG4gICAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxuICAgIGVycm9yQ2xhc3M6ICdwb3B1cF9fZXJyb3JfdmlzaWJsZSdcbn07IiwiaW1wb3J0IHtlc2NCdXR0b259IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XG4gICAgICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpOyAvL9GC0YPRgiDRjyDRgdC00LXQu9Cw0Lsg0LHQuNC90LQg0LTQu9GPINGC0L7Qs9C+LCDRh9GC0L7QsdGLINC/0YDQuCBcbiAgICAgICAgLy/Qt9Cw0LrRgNGL0YLQuNC4INC/0L7Qv9Cw0L/QsCDQvtCx0YDQsNCx0L7RgtGH0LjQuiDRg9C00LDQu9GP0LvRgdGPLCDQsCDRgdGC0YDQtdC70L7Rh9C90YPRjiDRhNGD0L3QutGG0LjRjiDQvNC+0LbQvdC+INC40YHQv9C+0LvRjNC30L7QstCw0YLRjCDRgtC+0LPQtNCwLCDQutC+0LPQtNCwINC90LUg0L3Rg9C20L3QviDQtdC1INGD0LTQsNC70Y/RgtGMLiBcbiAgICB9XG5cbiAgICBvcGVuKCkge1xuICAgICAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgICB9XG5cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LnJlbW92ZSgncG9wdXBfb3BlbmVkJyk7XG4gICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gICAgfVxuXG4gICAgX2hhbmRsZUVzY0Nsb3NlKGV2dCkge1xuICAgICAgICBpZiAoZXZ0LmtleSA9PT0gZXNjQnV0dG9uKSB7XG4gICAgICAgICAgICB0aGlzLmNsb3NlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBfaGFuZGxlT3ZlcmxheUNsb3NlKGV2dCkge1xuICAgICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwJykpIHtcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Nsb3NlLWJ1dHRvbicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZXZ0KSA9PiB0aGlzLl9oYW5kbGVPdmVybGF5Q2xvc2UoZXZ0KSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICAgIGNvbnN0cnVjdG9yKHN1Ym1pdEZvcm0sIHBvcHVwU2VsZWN0b3IpIHtcbiAgICAgICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgICAgIHRoaXMuX3N1Ym1pdEZvcm0gPSBzdWJtaXRGb3JtO1xuICAgICAgICB0aGlzLl9wb3B1cEZvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcbiAgICB9XG5cbiAgICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbCgnLnBvcHVwX19pbnB1dCcpO1xuICAgICAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XG4gICAgICAgIHRoaXMuX2lucHV0U2VsZWN0b3IuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLl9mb3JtVmFsdWVzO1xuICAgIH1cblxuICAgIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgICAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5fc3VibWl0Rm9ybSk7XG4gICAgfVxuXG4gICAgY2xvc2UoKSB7XG4gICAgICAgIHN1cGVyLmNsb3NlKCk7XG4gICAgICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICAgIH1cbn1cblxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuaW1wb3J0IHtmdWxsc2NyZWVuSW1hZ2UsIGZ1bGxzY3JlZW5UaXRsZX0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICB9XG4gICAgb3BlbihkYXRhKSB7XG4gICAgICAgIHN1cGVyLm9wZW4oKTtcbiAgICAgICAgZnVsbHNjcmVlbkltYWdlLnNyYyA9IGRhdGEubGluaztcbiAgICAgICAgZnVsbHNjcmVlblRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgICBmdWxsc2NyZWVuSW1hZ2UuYWx0ID0gZGF0YS5uYW1lO1xuICAgIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcbiAgICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXJ9LCBjb250YWluZXJTZWxlY3Rvcikge1xuICAgICAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgICAgICB0aGlzLl9jb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNvbnRhaW5lclNlbGVjdG9yKTtcbiAgICB9XG5cbiAgICByZW5kZXIoZGF0YSkge1xuICAgICAgICBkYXRhLnJldmVyc2UoKTtcbiAgICAgICAgZGF0YS5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVuZGVyZXIoaXRlbSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGFkZEl0ZW0oaXRlbSkge1xuICAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChpdGVtKTtcbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICAgIGNvbnN0cnVjdG9yKHt1c2VyTmFtZSwgdXNlckFib3V0LCB1c2VyQXZhdGFyfSkge1xuICAgICAgICB0aGlzLl9uYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyTmFtZSk7XG4gICAgICAgIHRoaXMuX2Fib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VyQWJvdXQpO1xuICAgICAgICB0aGlzLl9hdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHVzZXJBdmF0YXIpO1xuICAgIH1cblxuICAgIGdldFVzZXJJbmZvKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogdGhpcy5fbmFtZS50ZXh0Q29udGVudCxcbiAgICAgICAgICAgIGFib3V0OiB0aGlzLl9hYm91dC50ZXh0Q29udGVudFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIHNldFVzZXJJbmZvKHtuYW1lLCBhYm91dCwgdXNlcklkfSkge1xuICAgICAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gbmFtZTtcbiAgICAgICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBhYm91dDtcbiAgICAgICAgdGhpcy5faWQgPSB1c2VySWQ7XG4gICAgfVxuXG4gICAgc2V0VXNlckF2YXRhcih7YXZhdGFyfSkge1xuICAgICAgICB0aGlzLl9hdmF0YXIuc3JjID0gYXZhdGFyO1xuICAgIH1cbiAgICBcbiAgICBnZXRVc2VySWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9pZDtcbiAgICB9XG59XG5cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwaSB7XG4gICAgY29uc3RydWN0b3Ioe2Jhc2VVcmwsIGhlYWRlcnN9KSB7XG4gICAgICAgIHRoaXMuYmFzZVVybCA9IGJhc2VVcmw7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9IGhlYWRlcnM7XG4gICAgfVxuXG4gICAgX2NoZWNrUmVzcG9uc2UocmVzKSB7XG4gICAgICAgIGlmIChyZXMub2spIHtcbiAgICAgICAgICAgIHJldHVybiByZXMuanNvbigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChg0J7RiNC40LHQutCwOiAke3Jlcy5zdGF0dXN9YCk7XG4gICAgfVxuXG4gICAgZ2V0VXNlckF0dHJpYnV0ZSgpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKHRoaXMuYmFzZVVybCArICcvdXNlcnMvbWUnLCB7XG4gICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgICB9XG5cbiAgICBnZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCAodGhpcy5iYXNlVXJsICsgJy9jYXJkcycsIHtcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgICB9XG5cbiAgICBwcm9taXNlQWxsKCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuZ2V0VXNlckF0dHJpYnV0ZSgpLCB0aGlzLmdldEluaXRpYWxDYXJkcygpXSk7XG4gICAgfVxuXG4gICAgcmVuZGVyTG9hZGluZyhidXR0b24sIGlzTG9hZGluZywgdGV4dCkge1xuICAgICAgICBpZihpc0xvYWRpbmcpIHtcbiAgICAgICAgICAgIHRoaXMuX2J1dHRvblRleHQgPSBidXR0b24udGV4dENvbnRlbnQ7XG4gICAgICAgICAgICBidXR0b24udGV4dENvbnRlbnQgPSB0ZXh0O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnV0dG9uLnRleHRDb250ZW50ID0gdGhpcy5fYnV0dG9uVGV4dDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldFVzZXJBdHRyaWJ1dGUoaW5wdXROYW1lLCBpbnB1dEFib3V0KSB7XG4gICAgICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyAnL3VzZXJzL21lJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgIG5hbWU6IGlucHV0TmFtZSxcbiAgICAgICAgICAgICAgICBhYm91dDogaW5wdXRBYm91dFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSlcbiAgICB9XG5cbiAgICBhZGRDYXJkKGlucHV0TmFtZSwgaW5wdXRMaW5rKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyAnL2NhcmRzJywge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgbmFtZTogaW5wdXROYW1lLFxuICAgICAgICAgICAgICAgIGxpbms6IGlucHV0TGluayxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9KVxuICAgICAgICAudGhlbigocmVzKSA9PiB0aGlzLl9jaGVja1Jlc3BvbnNlKHJlcykpXG4gICAgfVxuXG4gICAgcmVtb3ZlQ2FyZChjYXJkSWQpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKHRoaXMuYmFzZVVybCArICcvY2FyZHMvJyArIGNhcmRJZCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgbGlrZUNhcmQoY2FyZElkKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyAnL2NhcmRzL2xpa2VzLycgKyBjYXJkSWQsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSlcbiAgICB9XG5cbiAgICBkaXNsaWtlQ2FyZChjYXJkSWQpIHtcbiAgICAgICAgcmV0dXJuIGZldGNoKHRoaXMuYmFzZVVybCArICcvY2FyZHMvbGlrZXMvJyArIGNhcmRJZCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnREVMRVRFJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oKHJlcykgPT4gdGhpcy5fY2hlY2tSZXNwb25zZShyZXMpKTtcbiAgICB9XG5cbiAgICBjaGFuZ2VBdmF0YXIoYXZhdGFyKSB7XG4gICAgICAgIHJldHVybiBmZXRjaCh0aGlzLmJhc2VVcmwgKyAnL3VzZXJzL21lL2F2YXRhcicsIHtcbiAgICAgICAgICAgIG1ldGhvZDogJ1BBVENIJyxcbiAgICAgICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVycyxcbiAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgIGF2YXRhcjogYXZhdGFyLFxuICAgICAgICAgICAgfSksXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKChyZXMpID0+IHRoaXMuX2NoZWNrUmVzcG9uc2UocmVzKSk7XG4gICAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gJy4vUG9wdXAuanMnO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhSZW1vdmUgZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3Ioc3VibWl0Rm9ybSwgcG9wdXBTZWxlY3Rvcikge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcbiAgICAgICAgdGhpcy5fYWNjZXB0QnV0dG9uID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwX19zYXZlLWJ1dHRvbl9kZWxldGUtYWNjZXB0Jyk7XG4gICAgICAgIHRoaXMuX3N1Ym1pdCA9IHN1Ym1pdEZvcm07XG4gICAgfVxuICAgIG9wZW4oY2FyZCwgY2FyZElkKSB7XG4gICAgICAgIHN1cGVyLm9wZW4oKTtcbiAgICAgICAgdGhpcy5fY2FyZCA9IGNhcmQ7XG4gICAgICAgIHRoaXMuX2lkID0gY2FyZElkO1xuICAgIH1cbiAgICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAgICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbiAgICAgICAgdGhpcy5fYWNjZXB0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fc3VibWl0KHRoaXMuX2lkLCB0aGlzLl9jYXJkLCB0aGlzKVxuICAgICAgICB9KTtcbiAgICB9XG59IiwiaW1wb3J0ICcuLi9wYWdlcy9pbmRleC5jc3MnO1xuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gJy4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyc7XG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcbmltcG9ydCB7ZWRpdFByb2ZpbGVCdXR0b24sIGFkZENhcmRCdXR0b24scG9wdXBUZXh0TmFtZSwgcG9wdXBUZXh0QWJvdXQsXG5uZXdDYXJkRm9ybSwgcG9wdXBGb3JtUHJvZmlsZSwgYWxsRm9ybXNDbGFzc2VzLCBhdmF0YXJFZGl0QnV0dG9uLFxucG9wdXBUZXh0Q2FyZCwgcG9wdXBMaW5rQ2FyZCwgcG9wdXBBdmF0YXJGb3JtLCBwb3B1cEF2YXRhckxpbmssIHBvcHVwRWRpdFNhdmVCdXR0b24sXG5wb3B1cENhcmRTYXZlQnV0dG9uLCBwb3B1cEF2YXRhclNhdmVCdXR0b24sIHBvcHVwUmVtb3ZlU2F2ZUJ1dHRvbiwgZWxlbWVudHN9IGZyb20gJy4uL3V0aWxzL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcbmltcG9ydCBQb3B1cFdpdGhSZW1vdmUgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhSZW1vdmUnO1xuXG5jb25zdCBwcm9maWxlVmFsaWRhdGVkID0gbmV3IEZvcm1WYWxpZGF0b3IoYWxsRm9ybXNDbGFzc2VzLCBwb3B1cEZvcm1Qcm9maWxlKTtcbmNvbnN0IGNhcmRWYWxpZGF0ZWQgPSAgbmV3IEZvcm1WYWxpZGF0b3IoYWxsRm9ybXNDbGFzc2VzLCBuZXdDYXJkRm9ybSk7XG5jb25zdCBhdmF0YXJWYWxpZGF0ZWQgPSBuZXcgRm9ybVZhbGlkYXRvcihhbGxGb3Jtc0NsYXNzZXMsIHBvcHVwQXZhdGFyRm9ybSk7XG5jb25zdCBvcGVuRnVsbEltYWdlID0gbmV3IFBvcHVwV2l0aEltYWdlKCcucG9wdXBfX2Z1bGxzY3JlZW4nKTtcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHt1c2VyTmFtZTogJy5wcm9maWxlX19uYW1lJywgdXNlckFib3V0OiAnLnByb2ZpbGVfX2Fib3V0JywgdXNlckF2YXRhcjogJy5wcm9maWxlX19hdmF0YXInfSk7XG5cbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xuICAgIGJhc2VVcmw6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTE3JyxcbiAgICBoZWFkZXJzOiB7XG4gICAgICAgIGF1dGhvcml6YXRpb246ICc5NWJhNGNiOS0wYzU5LTQ3ZGUtOTYzNy00YjU0ODkzM2RhMGYnLFxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgfVxufSk7XG5cbmNvbnN0IGFkZE5ld0NhcmQgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IG5ld0NhcmQgPSBuZXcgQ2FyZChkYXRhLCAnI2NhcmQtdGVtcGxhdGUnLCBcbiAgICB1c2VySW5mby5nZXRVc2VySWQoKSxcbiAgICAoKSA9PiB7XG4gICAgICAgIG9wZW5GdWxsSW1hZ2Uub3BlbihkYXRhKTtcbiAgICB9LFxuICAgIChjYXJkLCBjYXJkSWQpID0+IHtcbiAgICAgICAgcG9wdXBSZW1vdmVDYXJkLm9wZW4oY2FyZCwgY2FyZElkKTtcbiAgICB9LFxuICAgIChjYXJkSWQpID0+IHtcbiAgICAgICAgcmV0dXJuIGFwaS5saWtlQ2FyZChjYXJkSWQpXG4gICAgICAgIC50aGVuKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBuZXdDYXJkLnNob3dMaWtlc1Njb3JlKGl0ZW0ubGlrZXMpO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICAoY2FyZElkKSA9PiB7XG4gICAgICAgIHJldHVybiBhcGkuZGlzbGlrZUNhcmQoY2FyZElkKVxuICAgICAgICAudGhlbigoaXRlbSkgPT4ge1xuICAgICAgICAgICAgbmV3Q2FyZC5zaG93TGlrZXNTY29yZShpdGVtLmxpa2VzKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICApO1xuICAgIGNvbnN0IG5ld0NhcmRFbGVtZW50ID0gbmV3Q2FyZC5jcmVhdGVDYXJkKCk7XG4gICAgcmV0dXJuIG5ld0NhcmRFbGVtZW50O1xufVxuXG5hcGkucHJvbWlzZUFsbCgpXG4gICAgLnRoZW4oKFt1c2VyLCBpbml0aWFsQ2FyZHNdKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJJbmZvKHtuYW1lOiB1c2VyLm5hbWUsIGFib3V0OiB1c2VyLmFib3V0LCB1c2VySWQ6IHVzZXIuX2lkfSk7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoe2F2YXRhcjogdXNlci5hdmF0YXJ9KTtcbiAgICAgICAgY29uc3QgaW5pdENhcmRFbGVtZW50cyA9IG5ldyBTZWN0aW9uKFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHJlbmRlcmVyOiAoZGF0YSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpbml0Q2FyZEVsZW1lbnRzLmFkZEl0ZW0oYWRkTmV3Q2FyZChkYXRhKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgICcuZWxlbWVudHMnKTtcbiAgICAgICAgaW5pdENhcmRFbGVtZW50cy5yZW5kZXIoaW5pdGlhbENhcmRzKTtcbn0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbn0pO1xuXG5jb25zdCBwcm9maWxlRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBhcGkucmVuZGVyTG9hZGluZyhwb3B1cEVkaXRTYXZlQnV0dG9uLCB0cnVlLCAn0JfQsNCz0YDRg9C30LrQsC4uLicpO1xuICAgIGFwaS5zZXRVc2VyQXR0cmlidXRlKHBvcHVwVGV4dE5hbWUudmFsdWUsIHBvcHVwVGV4dEFib3V0LnZhbHVlKVxuICAgICAgICAudGhlbigodXNlcikgPT4ge1xuICAgICAgICAgICAgdXNlckluZm8uc2V0VXNlckluZm8oe25hbWU6IHVzZXIubmFtZSwgYWJvdXQ6IHVzZXIuYWJvdXQsIHVzZXJJZDogdXNlci5faWR9KTtcbiAgICAgICAgICAgIHByb2ZpbGVFZGl0LmNsb3NlKCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgICAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgICAgICBhcGkucmVuZGVyTG9hZGluZyhwb3B1cEVkaXRTYXZlQnV0dG9uKTtcbiAgICAgICAgfSlcbn0sICcucG9wdXBfX3Byb2ZpbGUtZWRpdCcpO1xuXG5jb25zdCBjYXJkRWRpdCA9IG5ldyBQb3B1cFdpdGhGb3JtKChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBhcGkucmVuZGVyTG9hZGluZyhwb3B1cENhcmRTYXZlQnV0dG9uLCB0cnVlLCAn0JfQsNCz0YDRg9C30LrQsC4uLicpO1xuICAgIGFwaS5hZGRDYXJkKHBvcHVwVGV4dENhcmQudmFsdWUsIHBvcHVwTGlua0NhcmQudmFsdWUpXG4gICAgICAgIC50aGVuKChkYXRhKSA9PiB7XG4gICAgICAgICAgICBlbGVtZW50cy5wcmVwZW5kKGFkZE5ld0NhcmQoZGF0YSkpO1xuICAgICAgICAgICAgY2FyZEVkaXQuY2xvc2UoKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIH0pXG4gICAgICAgIC5maW5hbGx5KCgpID0+IHtcbiAgICAgICAgICAgIGFwaS5yZW5kZXJMb2FkaW5nKHBvcHVwQ2FyZFNhdmVCdXR0b24sIGZhbHNlKTtcbiAgICAgICAgfSlcbn0sICcucG9wdXBfX2NhcmQtZm9ybScpO1xuXG5jb25zdCBwb3B1cEF2YXRhciA9IG5ldyBQb3B1cFdpdGhGb3JtKChldnQpID0+IHtcbiAgICBldnQucHJldmVudERlZmF1bHQoKTtcbiAgICBhcGkucmVuZGVyTG9hZGluZyhwb3B1cEF2YXRhclNhdmVCdXR0b24sIHRydWUsICfQodC+0YXRgNCw0L3QtdC90LjQtS4uLicpO1xuICAgIGFwaS5jaGFuZ2VBdmF0YXIocG9wdXBBdmF0YXJMaW5rLnZhbHVlKVxuICAgIC50aGVuKCh1c2VyKSA9PiB7XG4gICAgICAgIHVzZXJJbmZvLnNldFVzZXJBdmF0YXIoe2F2YXRhcjogdXNlci5hdmF0YXJ9KTtcbiAgICAgICAgcG9wdXBBdmF0YXIuY2xvc2UoKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgfSlcbiAgICAuZmluYWxseSgoKSA9PiB7XG4gICAgICAgIGFwaS5yZW5kZXJMb2FkaW5nKHBvcHVwQXZhdGFyU2F2ZUJ1dHRvbiwgZmFsc2UpO1xuICAgIH0pXG59LCAnLnBvcHVwX19lZGl0LWF2YXRhcicpO1xuXG5jb25zdCBwb3B1cFJlbW92ZUNhcmQgPSBuZXcgUG9wdXBXaXRoUmVtb3ZlKChjYXJkSWQsIGNhcmQsIHBvcHVwKSA9PiB7XG4gICAgYXBpLnJlbmRlckxvYWRpbmcocG9wdXBSZW1vdmVTYXZlQnV0dG9uLCB0cnVlLCAn0KPQtNCw0LvQtdC90LjQtS4uLicpO1xuICAgIGFwaS5yZW1vdmVDYXJkKGNhcmRJZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICAgIGNhcmQucmVtb3ZlKCk7XG4gICAgICAgIGFwaS5yZW5kZXJMb2FkaW5nKHBvcHVwUmVtb3ZlU2F2ZUJ1dHRvbiwgZmFsc2UpO1xuICAgICAgICBwb3B1cC5jbG9zZSgpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnIpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICB9KVxufSwgJy5wb3B1cF9fZGVsZXRlLWNhcmQnKTsgXG5cbnByb2ZpbGVWYWxpZGF0ZWQuZW5hYmxlVmFsaWRhdGlvbigpO1xuY2FyZFZhbGlkYXRlZC5lbmFibGVWYWxpZGF0aW9uKCk7XG5hdmF0YXJWYWxpZGF0ZWQuZW5hYmxlVmFsaWRhdGlvbigpO1xub3BlbkZ1bGxJbWFnZS5zZXRFdmVudExpc3RlbmVycygpO1xucHJvZmlsZUVkaXQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcbmNhcmRFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XG5wb3B1cEF2YXRhci5zZXRFdmVudExpc3RlbmVycygpO1xucG9wdXBSZW1vdmVDYXJkLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmVkaXRQcm9maWxlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgIHByb2ZpbGVFZGl0Lm9wZW4oKTtcbiAgICBwcm9maWxlVmFsaWRhdGVkLnJlbW92ZUVycm9ycygpO1xuICAgIHBvcHVwVGV4dE5hbWUudmFsdWUgPSB1c2VySW5mby5nZXRVc2VySW5mbygpLm5hbWU7XG4gICAgcG9wdXBUZXh0QWJvdXQudmFsdWUgPSB1c2VySW5mby5nZXRVc2VySW5mbygpLmFib3V0O1xufSk7XG5cbmFkZENhcmRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgY2FyZFZhbGlkYXRlZC5yZW1vdmVFcnJvcnMoKTtcbiAgICBjYXJkRWRpdC5vcGVuKCk7XG59KTtcblxuYXZhdGFyRWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBwb3B1cEF2YXRhci5vcGVuKCk7XG4gICAgYXZhdGFyVmFsaWRhdGVkLnJlbW92ZUVycm9ycygpO1xufSk7Il0sInNvdXJjZVJvb3QiOiIifQ==